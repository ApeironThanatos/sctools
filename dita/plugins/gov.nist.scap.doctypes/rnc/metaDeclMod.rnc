namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace dita = "http://dita.oasis-open.org/architecture/2005/"

dita:moduleDesc [
  "\x{a}" ~
  "    "
  dita:moduleTitle [ "DITA Metadata" ]
  "\x{a}" ~
  "    "
  dita:headerComment [
    "\x{a}" ~
    "=============================================================\x{a}" ~
    "                   HEADER                                    \x{a}" ~
    "=============================================================\x{a}" ~
    " MODULE:    DITA Metadata                                    \x{a}" ~
    " VERSION:   1.2                                              \x{a}" ~
    " DATE:      November 2009                                    \x{a}" ~
    "                                                             \x{a}" ~
    "=============================================================\x{a}" ~
    "\x{a}" ~
    "=============================================================\x{a}" ~
    "                   PUBLIC DOCUMENT TYPE DEFINITION           \x{a}" ~
    "                   TYPICAL INVOCATION                        \x{a}" ~
    "                                                             \x{a}" ~
    " Refer to this file by the following public identifier or an \x{a}" ~
    "      appropriate system identifier \x{a}" ~
    'PUBLIC "-//OASIS//ELEMENTS DITA Metadata//EN"\x{a}' ~
    '      Delivered as file "metaDecl.mod"                            \x{a}' ~
    "\x{a}" ~
    "=============================================================\x{a}" ~
    "SYSTEM:     Darwin Information Typing Architecture (DITA)    \x{a}" ~
    "                                                             \x{a}" ~
    "PURPOSE:    Declaring the elements and specialization        \x{a}" ~
    "            attributes for the DITA XML Metadata             \x{a}" ~
    "                                                             \x{a}" ~
    "ORIGINAL CREATION DATE:                                      \x{a}" ~
    "            March 2001                                       \x{a}" ~
    "                                                             \x{a}" ~
    "            (C) Copyright OASIS Open 2005, 2009.             \x{a}" ~
    "            (C) Copyright IBM Corporation 2001, 2004.        \x{a}" ~
    "            All Rights Reserved.                             \x{a}" ~
    "                                                             \x{a}" ~
    " UPDATES:                                                    \x{a}" ~
    '   2005.11.15 RDA: Corrected the "Delivered as" system ID    \x{a}' ~
    "   2006.06.06 RDA: Move indexterm into commonElements        \x{a}" ~
    "   2006.06.07 RDA: Make universal attributes universal       \x{a}" ~
    "                     (DITA 1.1 proposal #12)                 \x{a}" ~
    "   2006.11.30 RDA: Add -dita-use-conref-target to enumerated \x{a}" ~
    "                     attributes                              \x{a}" ~
    "   2007.12.01 EK:  Reformatted DTD modules for DITA 1.2       \x{a}" ~
    "   2008.01.28 RDA: Removed enumerations for attributes:      \x{a}" ~
    "                   author/@type, copyright/@type,            \x{a}" ~
    "                   permissions/@view, audience/@type,        \x{a}" ~
    "                   audience/@job, audience/@experiencelevel  \x{a}" ~
    "   2008.01.28 RDA: Moved <metadata> defn. here from topic.mod\x{a}" ~
    "   2008.01.30 RDA: Replace @conref defn. with %conref-atts;  \x{a}" ~
    "   2008.02.12 RDA: Add ph to source                          \x{a}" ~
    "   2008.02.12 RDA: Add @format, @scope, and @type to         \x{a}" ~
    "                   publisher, source                         \x{a}" ~
    "   2008.02.12 RDA: Add @format, @scope, to author            \x{a}" ~
    "   2008.02.13 RDA: Create .content and .attributes entities  \x{a}" ~
    "   2009.03.09 RDA: Corrected public ID in comments to use    \x{a}" ~
    "                   ELEMENTS instead of ENTITIES              \x{a}" ~
    "=============================================================\x{a}" ~
    "   \x{a}" ~
    " "
  ]
  "\x{a}" ~
  "    "
  dita:moduleMetadata [
    "\x{a}" ~
    "      "
    dita:moduleType [ "base" ]
    "\x{a}" ~
    "      "
    dita:moduleShortName [ "metaDecl" ]
    "\x{a}" ~
    "      "
    dita:modulePublicIds [
      "\x{a}" ~
      "        "
      dita:dtdMod [
        "-//OASIS//ELEMENTS DITA"
        dita:var [ presep = " " name = "ditaver" ]
        " Metadata//EN"
      ]
      "\x{a}" ~
      "        "
      dita:xsdMod [
        "urn:oasis:names:tc:dita:xsd:metaDeclMod.xsd"
        dita:var [ presep = ":" name = "ditaver" ]
      ]
      "\x{a}" ~
      "        "
      dita:xsdGrp [
        "urn:oasis:names:tc:dita:xsd:metaDeclGrp.xsd"
        dita:var [ presep = ":" name = "ditaver" ]
      ]
      "\x{a}" ~
      "        "
      dita:rncMod [
        "urn:oasis:names:tc:dita:rnc:metaDeclMod.rnc"
        dita:var [ presep = ":" name = "ditaver" ]
      ]
      "\x{a}" ~
      "        "
      dita:rngMod [
        "urn:oasis:names:tc:dita:rng:metaDeclMod.rng"
        dita:var [ presep = ":" name = "ditaver" ]
      ]
      "\x{a}" ~
      "      "
    ]
    "\x{a}" ~
    "      "
    dita:domainsContribution [ ]
    "\x{a}" ~
    "    "
  ]
  "\x{a}" ~
  "  "
]

## Define type patterns
div {
  date-format = xsd:string
}

## ELEMENT TYPE DECLARATIONS
div {
  
  ## LONG NAME: Author
  div {
    author.content = words.cnt*
    author.attributes =
      univ-atts,
      attribute href { text }?,
      attribute format { text }?,
      attribute scope {
        "external" | "local" | "peer" | "-dita-use-conref-target"
      }?,
      attribute keyref { text }?,
      attribute type { text }?
    author.element =
      
      ## The <author> metadata element contains the name of the topic's author. Category: Prolog elements
      [ dita:longName = "Author" ]
      element author { author.attlist, author.content }
    author.attlist &= author.attributes
  }
  
  ## LONG NAME: Source
  div {
    source.content = (words.cnt | ph)*
    source.attributes =
      univ-atts,
      attribute href { text }?,
      attribute format { text }?,
      attribute type { text }?,
      attribute scope {
        "external" | "local" | "peer" | "-dita-use-conref-target"
      }?,
      attribute keyref { text }?
    source.element =
      
      ## The <source> element contains a reference to a resource from which the present topic is derived, either completely or in part. The element can contain a description of
      ##             the resource; the href reference can be a string or a URL that points to it. Category: Prolog elements
      [ dita:longName = "Source" ]
      element source { source.attlist, source.content }
    source.attlist &= source.attributes
  }
  
  ## LONG NAME: Publisher
  div {
    publisher.content = words.cnt*
    publisher.attributes =
      attribute href { text }?,
      attribute format { text }?,
      attribute type { text }?,
      attribute scope {
        "external" | "local" | "peer" | "-dita-use-conref-target"
      }?,
      attribute keyref { text }?,
      univ-atts
    publisher.element =
      
      ## The <publisher> metadata element contains the name of the person, company, or organization responsible for making the content or subject of the topic available. Category:
      ##             Prolog elements
      [ dita:longName = "Publisher" ]
      element publisher { publisher.attlist, publisher.content }
    publisher.attlist &= publisher.attributes
  }
  
  ## LONG NAME: Copyright
  div {
    copyright.content = copyryear+, copyrholder
    copyright.attributes =
      univ-atts,
      attribute type { text }?
    copyright.element =
      
      ## The <copyright> element is used for a single copyright entry. It includes the copyright years and the copyright holder. Multiple <copyright> statements are allowed.
      ##             Category: Prolog elements
      [ dita:longName = "Copyright" ]
      element copyright { copyright.attlist, copyright.content }
    copyright.attlist &= copyright.attributes
  }
  
  ## LONG NAME: Copyright Year
  div {
    copyryear.content = empty
    copyryear.attributes =
      attribute year { date-format },
      univ-atts
    copyryear.element =
      
      ## The <copyryear> element contains the copyright year as specified by the year attribute. Category: Prolog elements
      [ dita:longName = "Copyright Year" ]
      element copyryear { copyryear.attlist, copyryear.content }
    copyryear.attlist &= copyryear.attributes
  }
  
  ## LONG NAME: Copyright Holder
  div {
    copyrholder.content = words.cnt*
    copyrholder.attributes = univ-atts
    copyrholder.element =
      
      ## The copyright holder (<copyrholder>) element names the entity that holds legal rights to the material contained in the topic. Category: Prolog elements
      [ dita:longName = "Copyright Holder" ]
      element copyrholder { copyrholder.attlist, copyrholder.content }
    copyrholder.attlist &= copyrholder.attributes
  }
  
  ## LONG NAME: Critical Dates
  div {
    critdates.content = created?, revised*
    critdates.attributes = univ-atts
    critdates.element =
      
      ## The <critdates> element contains the critical dates in a document life cycle, such as the creation date and multiple revision dates. Category: Prolog
      ##             elements
      [ dita:longName = "Critical Dates" ]
      element critdates { critdates.attlist, critdates.content }
    critdates.attlist &= critdates.attributes
  }
  
  ## LONG NAME: Created Date
  div {
    created.content = empty
    created.attributes =
      attribute date { date-format },
      attribute golive { date-format }?,
      attribute expiry { date-format }?,
      univ-atts
    created.element =
      
      ## The <created> element specifies the document creation date using the date attribute. Category: Prolog elements
      [ dita:longName = "Created Date" ]
      element created { created.attlist, created.content }
    created.attlist &= created.attributes
  }
  
  ## LONG NAME: Revised Date
  div {
    revised.content = empty
    revised.attributes =
      attribute modified { date-format },
      attribute golive { date-format }?,
      attribute expiry { date-format }?,
      univ-atts
    revised.element =
      
      ## The <revised> element in the prolog is used to maintain tracking dates that are important in a topic development cycle, such as the last modification date, the original
      ##             availability date, and the expiration date. Category: Prolog elements
      [ dita:longName = "Revised Date" ]
      element revised { revised.attlist, revised.content }
    revised.attlist &= revised.attributes
  }
  
  ## LONG NAME: Permissions
  div {
    permissions.content = empty
    permissions.attributes =
      univ-atts,
      attribute view { text }
    permissions.element =
      
      ## The <permissions> prolog element can indicate any preferred controls for access to a topic. Topics can be filtered based on the permissions element. This capability
      ##             depends on your output formatting process. Category: Prolog elements
      [ dita:longName = "Permissions" ]
      element permissions { permissions.attlist, permissions.content }
    permissions.attlist &= permissions.attributes
  }
  
  ## LONG NAME: Category
  div {
    category.content = words.cnt*
    category.attributes = univ-atts
    category.element =
      
      ## The <category> element can represent any category by which a topic might be classified for retrieval or navigation; for example, the categories could be used to group
      ##             topics in a generated navigation bar. Topics can belong to multiple categories. Category: Prolog elements
      [ dita:longName = "Category" ]
      element category { category.attlist, category.content }
    category.attlist &= category.attributes
  }
  
  ## LONG NAME: Metadata
  div {
    metadata.content =
      audience*,
      category*,
      keywords*,
      prodinfo*,
      othermeta*,
      (data.elements.incl | foreign.unknown.incl)*
    metadata.attributes =
      univ-atts,
      attribute mapkeyref { text }?
    metadata.element =
      
      ## The <metadata> section of the prolog contains information about a topic such as audience and product information. Metadata can be used by computational processes to
      ##             select particular topics or to prepare search indexes or to customize navigation. Elements inside of <metadata> provide information about the content and subject of a topic; prolog
      ##             elements outside of <metadata> provide lifecycle information for the content unit (such as the author or copyright), which are unrelated to the subject. Category: Prolog
      ##             elements
      [ dita:longName = "Metadata" ]
      element metadata { metadata.attlist, metadata.content }
    metadata.attlist &= metadata.attributes
  }
  
  ## LONG NAME: Audience
  div {
    audience.content = empty
    audience.attributes =
      attribute type { text }?,
      attribute othertype { text }?,
      attribute job { text }?,
      attribute otherjob { text }?,
      attribute experiencelevel { text }?,
      attribute name { xsd:NMTOKEN }?,
      univ-atts
    audience.element =
      
      ## The <audience> metadata element indicates, through the value of its type attribute, the intended audience for a topic. Since a topic can have multiple audiences, you can
      ##             include multiple audience elements. For each audience you specify, you can identify the high-level task (job) they are trying to accomplish and the level of experience (experiencelevel)
      ##             expected. The audience element may be used to provide a more detailed definition of values used throughout the map or topic on the audience attribute. Category: Prolog
      ##             elements
      [ dita:longName = "Audience" ]
      element audience { audience.attlist, audience.content }
    audience.attlist &= audience.attributes
  }
  
  ## LONG NAME: Keywords
  div {
    keywords.content = (indexterm | keyword)*
    keywords.attributes = univ-atts
    keywords.element =
      
      ## The <keywords> element contains a list of key words (using <indexterm> or <keyword> markup) that can be used by a search engine. Category: Prolog
      ##             elements
      [ dita:longName = "Keywords" ]
      element keywords { keywords.attlist, keywords.content }
    keywords.attlist &= keywords.attributes
  }
  
  ## LONG NAME: Product Information
  div {
    prodinfo.content =
      prodname,
      [ dita:since = "DITA 1.3" ] (vrmlist?),
      (brand | component | featnum | platform | prognum | series)*
    prodinfo.attributes = univ-atts
    prodinfo.element =
      
      ## The <prodinfo> metadata element in the prolog contains information about the product or products that are the subject matter of the current topic. The prodinfo element
      ##             may be used to provide a more detailed definition of values used throughout the map or topic on the product attribute. Category: Prolog elements
      [ dita:longName = "Product Information" ]
      element prodinfo { prodinfo.attlist, prodinfo.content }
    prodinfo.attlist &= prodinfo.attributes
  }
  
  ## LONG NAME: Product Name
  div {
    prodname.content = words.cnt*
    prodname.attributes = univ-atts
    prodname.element =
      
      ## The <prodname> metadata element contains the name of the product that is supported by the information in this topic. Category: Prolog elements
      [ dita:longName = "Product Name" ]
      element prodname { prodname.attlist, prodname.content }
    prodname.attlist &= prodname.attributes
  }
  
  ## LONG NAME: Version Release and Modification List
  div {
    vrmlist.content = vrm+
    vrmlist.attributes = univ-atts
    vrmlist.element =
      
      ## The <vrmlist> element contains a set of <vrm> elements for logging the version, release, and modification information for multiple products or versions of products to
      ##             which the topic applies. Category: Prolog elements
      [ dita:longName = "Version Release and Modification List" ]
      element vrmlist { vrmlist.attlist, vrmlist.content }
    vrmlist.attlist &= vrmlist.attributes
  }
  
  ## LONG NAME: Version Release and Modification
  div {
    vrm.content = empty
    vrm.attributes =
      attribute version { text },
      attribute release { text }?,
      attribute modification { text }?,
      univ-atts
    vrm.element =
      
      ## The vrm empty element contains information about a single product's version, modification, and release, to which the current topic applies. Category: Prolog
      ##             elements
      [ dita:longName = "Version Release and Modification" ]
      element vrm { vrm.attlist, vrm.content }
    vrm.attlist &= vrm.attributes
  }
  
  ## LONG NAME: Brand
  div {
    brand.content = words.cnt*
    brand.attributes = univ-atts
    brand.element =
      
      ## The <brand> element indicates the manufacturer or brand associated with the product described by the parent <prodinfo> element. Category: Prolog
      ##             elements
      [ dita:longName = "Brand" ]
      element brand { brand.attlist, brand.content }
    brand.attlist &= brand.attributes
  }
  
  ## LONG NAME: Series
  div {
    series.content = words.cnt*
    series.attributes = univ-atts
    series.element =
      
      ## The <series> metadata element contains information about the product series that the topic supports. Category: Prolog elements
      [ dita:longName = "Series" ]
      element series { series.attlist, series.content }
    series.attlist &= series.attributes
  }
  
  ## LONG NAME: Platform
  div {
    platform.content = words.cnt*
    platform.attributes = univ-atts
    platform.element =
      
      ## The <platform> metadata element contains a description of the operating system and/or hardware related to the product being described by the <prodinfo> element. The
      ##             platform element may be used to provide a more detailed definition of values used throughout the map or topic on the platform attribute. Category: Prolog elements
      [ dita:longName = "Platform" ]
      element platform { platform.attlist, platform.content }
    platform.attlist &= platform.attributes
  }
  
  ## LONG NAME: Program Number
  div {
    prognum.content = words.cnt*
    prognum.attributes = univ-atts
    prognum.element =
      
      ## The <prognum> metadata element identifies the program number of the associated program product. This is typically an order number or a product tracking code that could be
      ##             replaced by an order number when a product completes development. Category: Prolog elements
      [ dita:longName = "Program Number" ]
      element prognum { prognum.attlist, prognum.content }
    prognum.attlist &= prognum.attributes
  }
  
  ## LONG NAME: Feature Number
  div {
    featnum.content = words.cnt*
    featnum.attributes = univ-atts
    featnum.element =
      
      ## The <featnum> element contains the feature number of a product in the metadata. Category: Prolog elements
      [ dita:longName = "Feature Number" ]
      element featnum { featnum.attlist, featnum.content }
    featnum.attlist &= featnum.attributes
  }
  
  ## LONG NAME: Component
  div {
    component.content = words.cnt*
    component.attributes = univ-atts
    component.element =
      
      ## The <component> element describes the component of the product that this topic is concerned with. For example, a product might be made up of many components, each of
      ##             which is installable separately. Components might also be shared by several products so that the same component is available for installation with many products. An implementation may (but
      ##             need not) use this identification to check cross-component dependencies when some components are installed, but not others. An implementation may also (but need not) use the identification
      ##             make sure that topics are hidden, removed, or flagged in some way when the component they describe isn't installed. Category: Prolog elements
      [ dita:longName = "Component" ]
      element component { component.attlist, component.content }
    component.attlist &= component.attributes
  }
  
  ## LONG NAME: Other Metadata NOTE: needs to be HTML-equiv, at least 
  div {
    othermeta.content = empty
    othermeta.attributes =
      attribute name { text },
      attribute content { text },
      attribute translate-content {
        "no" | "yes" | "-dita-use-conref-target"
      }?,
      univ-atts
    othermeta.element =
      
      ## The <othermeta> element can be used to identify properties not otherwise included in <metadata> and assign name/content values to those properties. The name attribute
      ##             identifies the property and the content attribute specifies the property's value. The values in this attribute are output as HTML metadata elements, and have no defined meaning for other
      ##             possible outputs such as PDF. Category: Prolog elements
      [ dita:longName = "Other Metadata" ]
      element othermeta { othermeta.attlist, othermeta.content }
    othermeta.attlist &= othermeta.attributes
  }
  
  ## LONG NAME: Resource Identifier
  div {
    resourceid.content = [ dita:since = "1.3" ] (data.elements.incl*)
    resourceid.attributes =
      select-atts,
      localization-atts,
      [ dita:since = "1.3" ] (attribute id { text }?),
      conref-atts,
      attribute appname { text }?,
      [ dita:since = "1.3" ] attribute appid { text }?,
      [ dita:since = "1.3" ] attribute ux-context-string { text }?,
      [ dita:since = "1.3" a:defaultValue = "topic-and-map" ]
      attribute ux-source-priority {
        "topic-and-map"
        | "topic-only"
        | "map-only"
        | "map-takes-priority"
        | "topic-takes-priority"
        | "-dita-use-conref-target"
      }?,
      [ dita:since = "1.3" ] attribute ux-windowref { text }?
    resourceid.element =
      
      ## The <resourceid> element provides an identifier for applications that require them in a particular format, when the normal id attribute of the topic can't be used. Each
      ##             resourceid entry should be unique. It is one of the metadata elements that can be included within the prolog of a topic, along with document tracking and product information, etc. The
      ##             element has no content, but takes an id attribute, an appname attribute, and an appid attribute. Category: Prolog elements
      [ dita:longName = "Resource Identifier" ]
      element resourceid { resourceid.attlist, resourceid.content }
    resourceid.attlist &= resourceid.attributes
  }
}

## Specialization attributes. Global attributes and class defaults
div {
  author.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/author " ] attribute class { text }?
  source.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/source " ] attribute class { text }?
  publisher.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/publisher " ] attribute class { text }?
  copyright.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/copyright " ] attribute class { text }?
  copyryear.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/copyryear " ] attribute class { text }?
  copyrholder.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/copyrholder " ]
    attribute class { text }?
  critdates.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/critdates " ] attribute class { text }?
  created.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/created " ] attribute class { text }?
  revised.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/revised " ] attribute class { text }?
  permissions.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/permissions " ]
    attribute class { text }?
  category.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/category " ] attribute class { text }?
  metadata.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/metadata " ] attribute class { text }?
  audience.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/audience " ] attribute class { text }?
  keywords.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/keywords " ] attribute class { text }?
  prodinfo.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/prodinfo " ] attribute class { text }?
  prodname.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/prodname " ] attribute class { text }?
  vrmlist.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/vrmlist " ] attribute class { text }?
  vrm.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/vrm " ] attribute class { text }?
  brand.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/brand " ] attribute class { text }?
  series.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/series " ] attribute class { text }?
  platform.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/platform " ] attribute class { text }?
  prognum.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/prognum " ] attribute class { text }?
  featnum.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/featnum " ] attribute class { text }?
  component.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/component " ] attribute class { text }?
  othermeta.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/othermeta " ] attribute class { text }?
  resourceid.attlist &=
    global-atts,
    [ a:defaultValue = "- topic/resourceid " ] attribute class { text }?
}
